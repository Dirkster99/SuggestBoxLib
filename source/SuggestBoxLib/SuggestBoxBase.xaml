<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:bc="clr-namespace:SuggestBoxLib"
	xmlns:conv="clr-namespace:SuggestBoxLib.Converters"
	xmlns:reskeys="clr-namespace:SuggestBoxLib.Themes"
	xmlns:local="clr-namespace:SuggestBoxLib.Model">

	<ControlTemplate x:Key="suggestableTextBoxTemplate" TargetType="{x:Type bc:SuggestBoxBase}">
		<ControlTemplate.Resources>
			<conv:BoolToVisibilityPropConverter x:Key="btv" />
			<DataTemplate DataType="{x:Type local:Tip}">
				<TextBlock Text="{Binding Value, Mode=OneTime}"></TextBlock>
            </DataTemplate>
		</ControlTemplate.Resources>

		<Border
			Name="Bd"
			Padding="{TemplateBinding Padding}"
			Background="{DynamicResource {x:Static reskeys:ResourceKeys.ControlInputBackgroundKey}}"
			BorderBrush="{TemplateBinding BorderBrush}"
			BorderThickness="{TemplateBinding BorderThickness}"
			SnapsToDevicePixels="true">
			<Grid x:Name="PART_Root">
				<TextBlock
					Margin="3,0"
					HorizontalAlignment="Left"
					VerticalAlignment="Center"
					Background="Transparent"
					Foreground="{DynamicResource {x:Static reskeys:ResourceKeys.ControlTextBrushKey}}"
					Opacity="0.5"
					Text="{TemplateBinding Hint}"
					Visibility="{Binding IsHintVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource btv}}" />

				<ScrollViewer
					x:Name="PART_ContentHost"
					Margin="0"
					RenderOptions.ClearTypeHint="Enabled"
					Visibility="Hidden" />

				<bc:PathTrimmingTextBlock
					x:Name="PART_EllipsedTEXT"
					Margin="3,0"
					HorizontalAlignment="Left"
					VerticalAlignment="Center"
					Path="{Binding Text, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
					RenderOptions.ClearTypeHint="Enabled"
					ShowElipses="{Binding ShowElipses, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
					Visibility="Visible" />

				<Popup
					x:Name="PART_Popup"
					AllowsTransparency="true"
					Focusable="False"
					IsOpen="{Binding IsPopupOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
					Placement="Bottom"
					PlacementTarget="{Binding ElementName=PART_ContentHost}"
					PopupAnimation="None"
					StaysOpen="True">
					<Border
						Background="{DynamicResource {x:Static reskeys:ResourceKeys.ControlPopupBackgroundBrushKey}}"
						BorderBrush="{TemplateBinding PopupBorderBrush}"
						BorderThickness="{TemplateBinding PopupBorderThickness}">
						<!--
							Do NOT REMOVE MaxHeight and MaxWidth
							These ensure that containing ListBox is virtualizing
						-->
						<Grid
							x:Name="PART_ResizeableGrid"
							MaxWidth="600"
							MaxHeight="600"
							Background="Transparent">
							<Grid.RowDefinitions>
								<RowDefinition Height="*" />
							</Grid.RowDefinitions>

							<Border
								x:Name="DropDownBorder"
								Grid.RowSpan="2"
								Width="{Binding ActualWidth, ElementName=PART_ContentHost}"
								Height="{Binding ActualHeight, ElementName=PART_ContentHost}"
								HorizontalAlignment="Stretch"
								VerticalAlignment="Stretch"
								Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
								BorderThickness="0" />

							<ListBox
								x:Name="PART_ItemList"
								Grid.Row="0"
								HorizontalAlignment="Stretch"
								VerticalAlignment="Top"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="0"
								DisplayMemberPath="{TemplateBinding DisplayMemberPath}"
								FontFamily="{TemplateBinding FontFamily}"
								FontSize="{TemplateBinding FontSize}"
								ItemContainerStyle="{Binding ItemContainerStyle, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
								ItemTemplate="{Binding ItemTemplate, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
								ItemTemplateSelector="{Binding ItemTemplateSelector, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
								ItemsSource="{Binding ItemsSource, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
								KeyboardNavigation.AcceptsReturn="True"
								KeyboardNavigation.DirectionalNavigation="Cycle"
								ScrollViewer.CanContentScroll="True"
								ScrollViewer.HorizontalScrollBarVisibility="Auto"
								ScrollViewer.IsDeferredScrollingEnabled="{Binding IsDeferredScrolling, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
								ScrollViewer.VerticalScrollBarVisibility="Auto"
								SelectedValuePath="{TemplateBinding SelectedValuePath}"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
								Template="{DynamicResource {x:Static reskeys:ResourceKeys.PopListBoxControlTemplate}}"
								VirtualizingPanel.IsVirtualizing="True"
								VirtualizingPanel.VirtualizationMode="Recycling" />

							<!--  RezizeGrip Thumb to support resizing the suggestion lib  -->
							<Thumb
								x:Name="PART_ResizeGripThumb"
								Grid.Row="0"
								Width="16"
								Height="16"
								Margin="0"
								HorizontalAlignment="Right"
								VerticalAlignment="Bottom"
								Background="Transparent"
								Style="{DynamicResource {x:Static reskeys:ResourceKeys.ResizeGripStyleKey}}" />
						</Grid>
					</Border>
				</Popup>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ControlInputTextDisabledKey}}" />
			</Trigger>
			<Trigger Property="IsReadOnly" Value="true">
				<Setter Property="Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ControlInputTextDisabledKey}}" />
			</Trigger>
			<Trigger Property="IsFocused" Value="true">
				<Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ControlAccentBrushKey}}" />
				<Setter TargetName="PART_ContentHost" Property="Visibility" Value="Visible" />
				<Setter TargetName="PART_EllipsedTEXT" Property="Visibility" Value="Hidden" />
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsReadOnly" Value="False" />
					<Condition Property="IsEnabled" Value="True" />
					<Condition Property="IsMouseOver" Value="True" />
				</MultiTrigger.Conditions>
				<Setter Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ControlInputBackgroundHoverKey}}" />
				<Setter Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ControlInputBorderHoverKey}}" />
				<Setter Property="Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ControlItemTextHoverKey}}" />
			</MultiTrigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!--  Style the SuggestBoxBase control  -->
	<Style BasedOn="{StaticResource {x:Type TextBox}}" TargetType="{x:Type bc:SuggestBoxBase}">
		<Setter Property="Template" Value="{StaticResource suggestableTextBoxTemplate}" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ControlTextBrushKey}}" />
		<Setter Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ControlInputBackgroundKey}}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="PopupBorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ControlInputBorderKey}}" />
		<Setter Property="PopupBorderThickness" Value="1" />
		<Setter Property="Padding" Value="0" />
		<Setter Property="AllowDrop" Value="true" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="ContextMenu">
			<Setter.Value>
				<ContextMenu>
					<MenuItem Command="ApplicationCommands.Cut" />
					<MenuItem Command="ApplicationCommands.Copy" />
					<MenuItem Command="ApplicationCommands.Paste" />
					<Separator />
					<MenuItem Command="ApplicationCommands.SelectAll" />
					<Separator />
					<MenuItem Command="ApplicationCommands.Undo" />
					<MenuItem Command="ApplicationCommands.Redo" />
				</ContextMenu>
			</Setter.Value>
		</Setter>
		<!--  Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/  -->
		<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
		<Setter Property="SelectionBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ControlAccentBrushKey}}" />
	</Style>

	<!--  Style the SuggestBox control  -->
	<Style BasedOn="{StaticResource {x:Type bc:SuggestBoxBase}}" TargetType="{x:Type bc:SuggestBox}" />

</ResourceDictionary>
